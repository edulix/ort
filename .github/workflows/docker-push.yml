# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Docker image

on:
  push:
    branches:
    - master
    - '[0-9]+.[0-9]+.x'
    tags:
    - '**'
  pull_request:
    branches:
    - master
    - '[0-9]+.[0-9]+.x'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3.1.0
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Setting some vars
        id: set-vars
        run: |
          export GIT_VERSION=$(git describe --abbrev=7 --always --tags --dirty)
          export USER_ID=$(id -u ${USER})
          export GROUP_ID=$(id -g ${USER})
          echo "GIT_VERSION=${GIT_VERSION}"
          echo "USER_ID=${USER_ID}"
          echo "GROUP_ID=${GROUP_ID}"
          echo "::set-output name=git-version::${GIT_VERSION}"
          echo "::set-output name=user-id::${USER_ID}"
          echo "::set-output name=group-id::${GROUP_ID}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: edulix/ort:${{ steps.set-vars.outputs.git-version }},edulix/ort:latest
          build-args: |
            USER_ID=${{ steps.set-vars.outputs.user-id }}
            GROUP_ID=${{ steps.set-vars.outputs.group-id }}
            ORT_VERSION=${{ steps.set-vars.outputs.git-version }}

